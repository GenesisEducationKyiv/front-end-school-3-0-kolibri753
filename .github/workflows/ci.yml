name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: 20

defaults:
  run:
    working-directory: client

jobs:
  install:
    name: Install & cache deps
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Use Node ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Restore node_modules cache
        id: modules
        uses: actions/cache@v4
        with:
          path: client/node_modules
          key: modules-${{ runner.os }}-${{ hashFiles('client/package-lock.json') }}
          restore-keys: modules-${{ runner.os }}-

      - name: Install packages
        if: steps.modules.outputs.cache-hit != 'true'
        run: npm ci --prefer-offline --no-audit --no-fund

  lint:
    name: ESLint & TypeScript
    runs-on: ubuntu-latest
    needs: install

    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: client/node_modules
          key: modules-${{ runner.os }}-${{ hashFiles('client/package-lock.json') }}

      - name: ESLint
        run: npm run lint 2>&1 | tee eslint.log

      - name: Type check
        run: npm run type-check 2>&1 | tee tsc.log

      - name: Upload logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: logs
          path: |
            client/eslint.log
            client/tsc.log
          retention-days: 7

  build-test:
    name: Build & Test
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: client/node_modules
          key: modules-${{ runner.os }}-${{ hashFiles('client/package-lock.json') }}
          restore-keys: modules-${{ runner.os }}-

      - name: Build
        run: npm run build

      - name: Unit tests
        run: npm run test:coverage

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-outputs
          path: client/dist
          retention-days: 7

      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: client/coverage
          retention-days: 7
